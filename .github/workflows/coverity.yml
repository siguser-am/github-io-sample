# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab\
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
      # Environment variables
    env:
      CSA: cov-analysis-linux64-2021.03
      COVERITY_TOOLS_HOME: /tmp/$CSA
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Coverity Tools Download
        run: |
            set -x
                        
            curl -kfLsS --user ${{secrets.COV_USER}}:${{secrets.COVERITY_PASSPHRASE}} ${{secrets.COV_URL}}/downloadFile.htm?fn=$CSA.tar.gz | tar -xzf - -C /tmp/
            curl -kfLsS --user ${{secrets.COV_USER}}:${{secrets.COVERITY_PASSPHRASE}} -o license.dat ${{secrets.COV_URL}}/downloadFile.htm?fn=license.dat
            curl -kfLsS --user ${{secrets.COV_USER}}:${{secrets.COVERITY_PASSPHRASE}} -o ca.cer ${{secrets.COV_URL}}/downloadFile.htm?fn=ca.cer
            mv license.dat $COVERITY_TOOLS_HOME/bin
      
      - name: Coverity Analysis
        run: |
            $COVERITY_TOOL_HOME/bin/cov-configure --java
            $COVERITY_TOOL_HOME/bin/cov-build --dir idir mvn clean compile -Drat.skip=true
            $COVERITY_TOOL_HOME/bin/cov-analyze --dir idir --all --webapp-security --disable-fb --ticker-mode none
            
            $COVERITY_TOOL_HOME/bin/cov-format-errors --json-output-v8 coverity-errors.json --dir idir

            $COVERITY_TOOL_HOME/node/bin/node $COVERITY_TOOL_HOME/SARIF/cov-format-sarif-for-github.js --inputFile coverity-errors.json --outputFile coverity-errors.sarif --githubUrl $GITHUB_SERVER_URL --repoName $GITHUB_REPOSITORY --checkoutPath GITHUB_REPOSITORY $GITHUB_WORKSPACE $GITHUB_REF
  
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: coverity-errors.sarif
